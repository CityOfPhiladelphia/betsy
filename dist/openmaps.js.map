{"version":3,"file":"openmaps.js","sources":["../src/util/is-mobile-device.js","../src/store.js","../src/util/config-mixin.js","../src/components/TopicPanel.vue","../src/components/markers-mixin.js","../src/components/MapPanel.vue","../src/components/WebMapViewer.vue","../src/util/merge-deep.js","../src/main.js"],"sourcesContent":["export default function () {\r\n  const mobileOrTabletRegexA = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\r\n  const mobileOrTabletRegexB = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\r\n\r\n  // get the user agent and test against both regex patterns\r\n  const userAgent = (navigator.userAgent || navigator.vendor || window.opera || '');\r\n  const isMobileOrTablet = (mobileOrTabletRegexA.test(userAgent) ||\r\n                            mobileOrTabletRegexB.test(userAgent.substr(0,4)));\r\n\r\n  return isMobileOrTablet;\r\n};\r\n","import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport isMobileDevice from './util/is-mobile-device';\r\n\r\n// when you load vuex from a script tag this seems to happen automatically\r\nVue.use(Vuex);\r\n\r\n// function createStore(config, bennyEndpoints, bennyRepresentation) {\r\nfunction createStore(config) { //}, bennyEndpoints, bennyRepresentation) {\r\n\r\n  const initialState = {\r\n    isMobileOrTablet: isMobileDevice(),\r\n    fullScreenMapEnabled: false,\r\n    bennyEndpoints: {},\r\n    // bennyEndpoints2: {},\r\n    // bennyEndpoints3: [],\r\n    geocode: {\r\n      status: null,\r\n      data: null,\r\n      input: null,\r\n      related: null,\r\n    },\r\n    layers: {\r\n      layerUrls: {},\r\n      inputLayerFilter: '',\r\n      inputTagsFilter: '',\r\n    },\r\n    map: {\r\n      location: {\r\n        lat: null,\r\n        lng: null\r\n      },\r\n      center: config.map.center,\r\n      zoom: config.map.zoom,\r\n      scale: null,\r\n      map: null,\r\n      basemap: 'pwd',\r\n      imagery: 'imagery2017',\r\n      shouldShowImagery: false,\r\n      basemapLayers: {},\r\n      webMap: null,\r\n      webMapUrlLayer: null,\r\n      webMapActiveLayers: [],\r\n      webMapDisplayedLayers: [],\r\n      webMapLayersAndRest: [],\r\n      watchPositionOn: false,\r\n      intersectingFeatures: [],\r\n      popupCoords: null,\r\n      selectedPopupLayer: null,\r\n      categories: [],\r\n      selectedCategory: '',\r\n      // webMapGeoJson: {}\r\n    },\r\n    shouldShowAddressCandidateList: false,\r\n    candidates: [],\r\n    addressEntered: null,\r\n    cyclomedia: {\r\n      initialized: false,\r\n      navBarOpen: false,\r\n      latLngFromMap: null,\r\n      orientation: {\r\n        yaw: null,\r\n        hFov: null,\r\n        xyz: null,\r\n      },\r\n      active: false,\r\n      recordings: [],\r\n    },\r\n    pictometry: {\r\n      ipa: null,\r\n      active: false,\r\n      shapeIds: [],\r\n      pngMarkerIds: [],\r\n      zoom: null,\r\n      // this is the state of the main leaflet map. when these values change\r\n      // the pictometry widget should react. the reason these are duplicated\r\n      // here is to avoid an infinite loop in the Map component when the\r\n      // viewport changes.\r\n      map: {\r\n        center: config.map.center,\r\n        zoom: config.map.zoom\r\n      }\r\n    },\r\n    lastSearchMethod: null,\r\n    // this gets set to true on a mobile device when the user clicks the\r\n    // \"See Datasets\" button\r\n    didToggleTopicsOn: false,\r\n    shouldShowTopics: true,\r\n    shouldShowMap: true,\r\n    windowWidth: 0,\r\n    route: null,\r\n    modals: {\r\n      help: {\r\n        open: false\r\n      }\r\n    }\r\n  };\r\n\r\n  // const TOGGLE_MODAL = 'modal/TOGGLE_MODAL'\r\n  // const CLOSE_MODALS = 'modal/CLOSE_MODALS'\r\n\r\n  // TODO standardize how payloads are passed around/handled\r\n  return new Vuex.Store({\r\n    state: initialState,\r\n    getters: {},\r\n    mutations: {\r\n      setCyclomediaInitialized(state, payload) {\r\n        state.cyclomedia.initialized = payload;\r\n      },\r\n      setIsMobileOrTablet(state, payload) {\r\n        state.isMobileOrTablet = payload;\r\n      },\r\n      setFullScreenMapEnabled(state, payload) {\r\n        state.fullScreenMapEnabled = payload;\r\n      },\r\n      setCategories(state, payload) {\r\n        state.map.categories = payload;\r\n      },\r\n      setSelectedCategory(state, payload) {\r\n        state.map.selectedCategory = payload;\r\n      },\r\n      setSelectedPopupLayer(state, payload) {\r\n        state.map.selectedPopupLayer = payload;\r\n      },\r\n      setIntersectingFeatures(state, payload) {\r\n        state.map.intersectingFeatures = payload;\r\n      },\r\n      setPopupCoords(state, payload) {\r\n        state.map.popupCoords = payload;\r\n      },\r\n      setBennyEndpoints(state, payload) {\r\n        state.bennyEndpoints = payload;\r\n      },\r\n      setBennyEndpoints2(state, payload) {\r\n        state.bennyEndpoints2 = payload;\r\n      },\r\n      setBennyEndpoints3(state, payload) {\r\n        state.bennyEndpoints3 = payload;\r\n      },\r\n      setLocation(state, payload) {\r\n        state.map.location.lat = payload.lat;\r\n        state.map.location.lng = payload.lng;\r\n      },\r\n      setWatchPositionOn(state, payload) {\r\n        state.map.watchPositionOn = payload;\r\n      },\r\n      setLayerUrls(state, payload) {\r\n        state.layers.layerUrls = payload;\r\n      },\r\n      setInputLayerFilter(state, payload) {\r\n        state.layers.inputLayerFilter = payload;\r\n      },\r\n      setInputTagsFilter(state, payload) {\r\n        state.layers.inputTagsFilter = payload;\r\n      },\r\n      setMap(state, payload) {\r\n        state.map.map = payload.map;\r\n      },\r\n      setWebMap(state, payload) {\r\n        state.map.webMap = payload;\r\n      },\r\n      setWebMapUrlLayer(state, payload) {\r\n        state.map.webMapUrlLayer = payload;\r\n      },\r\n      setWebMapActiveLayers(state, payload) {\r\n        state.map.webMapActiveLayers = payload;\r\n      },\r\n      setWebMapDisplayedLayers(state, payload) {\r\n        state.map.webMapDisplayedLayers = payload;\r\n      },\r\n      setWebMapLayersAndRest(state, payload) {\r\n        state.map.webMapLayersAndRest = payload;\r\n      },\r\n      setWebMapLayersOpacity(state, payload) {\r\n        // console.log('SETWEBMAPLAYERSOPACITY IS RUNNING', payload);\r\n        // let opa = state.map.webMapLayersAndRest.filter(layer => layer.layerName === payload.layerName)[0].opacity\r\n        // console.log('OPACITY BEFORE', state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].opacity);\r\n        state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].opacity = payload.opa;\r\n        // console.log('OPACITY AFTER', state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].opacity);\r\n        //   return currentLayer[0];\r\n        // console.log('SETWEBMAPLAYERSOPACITY FINISHED RUNNING');\r\n      },\r\n      // setWebMapGeoJson(state, payload) {\r\n      //   // const layerName = payload.layerName;\r\n      //   // const json = payload.json;\r\n      //   console.log('payload', payload);\r\n      //   // state.map.webMapGeoJson[payload[]] = payload[json];\r\n      //   state.map.webMapGeoJson = payload;\r\n      // },\r\n\r\n      setLegend(state, payload) {\r\n        state.map.webMapLayersAndRest.filter(layer => layer.title === payload.layerName)[0].legend = payload.legend;\r\n      },\r\n\r\n\r\n      setMapScale(state, payload) {\r\n        state.map.scale = payload\r\n      },\r\n      setBasemap(state, payload) {\r\n        state.map.basemap = payload;\r\n      },\r\n      setImagery(state, payload) {\r\n        state.map.imagery = payload;\r\n      },\r\n      setShouldShowImagery(state, payload) {\r\n        state.map.shouldShowImagery = payload;\r\n      },\r\n      // setLastSearchMethod(state, payload) {\r\n      //   state.lastSearchMethod = payload;\r\n      // },\r\n\r\n\r\n      setMapCenter(state, payload) {\r\n        state.map.center = payload;\r\n      },\r\n      setMapZoom(state, payload) {\r\n        state.map.zoom = payload\r\n      },\r\n      setGeocodeStatus(state, payload) {\r\n        state.geocode.status = payload;\r\n      },\r\n      setGeocodeData(state, payload) {\r\n        state.geocode.data = payload;\r\n      },\r\n      setGeocodeRelated(state, payload) {\r\n        state.geocode.related = payload;\r\n      },\r\n      setGeocodeInput(state, payload) {\r\n        state.geocode.input = payload;\r\n      },\r\n      setPictometryActive(state, payload) {\r\n        if (!config.pictometry.enabled) {\r\n          return;\r\n        }\r\n        state.pictometry.active = payload;\r\n      },\r\n      setPictometryIpa(state, payload) {\r\n        state.pictometry.ipa = payload;\r\n      },\r\n      setPictometryShapeIds(state, payload) {\r\n        state.pictometry.shapeIds = payload;\r\n      },\r\n      setPictometryPngMarkerIds(state, payload) {\r\n        state.pictometry.pngMarkerIds = payload;\r\n      },\r\n      setPictometryMapCenter(state, payload) {\r\n        state.pictometry.map.center = payload;\r\n      },\r\n      setPictometryMapZoom(state, payload) {\r\n        state.pictometry.map.zoom = payload;\r\n      },\r\n      setPictometryZoom(state, payload) {\r\n        state.pictometry.zoom = payload;\r\n      },\r\n      setCyclomediaActive(state, payload) {\r\n        if (!config.cyclomedia.enabled) {\r\n          return;\r\n        }\r\n        state.cyclomedia.active = payload;\r\n      },\r\n      setCyclomediaYaw(state, payload) {\r\n        state.cyclomedia.orientation.yaw = payload\r\n      },\r\n      setCyclomediaHFov(state, payload) {\r\n        state.cyclomedia.orientation.hFov = payload\r\n      },\r\n      setCyclomediaXyz(state, payload) {\r\n        state.cyclomedia.orientation.xyz = payload\r\n      },\r\n      setCyclomediaRecordings(state, payload) {\r\n        state.cyclomedia.recordings = payload;\r\n      },\r\n      setCyclomediaLatLngFromMap(state, payload) {\r\n        state.cyclomedia.latLngFromMap = payload;\r\n        // const { lat, lng } = payload || {};\r\n        // state.cyclomedia.latLngFromMap[0] = lat;\r\n        // state.cyclomedia.latLngFromMap[1] = lng;\r\n      },\r\n      setCyclomediaNavBarOpen(state, payload) {\r\n        state.cyclomedia.navBarOpen = payload;\r\n      },\r\n      setDidToggleTopicsOn(state, payload) {\r\n        state.didToggleTopicsOn = payload;\r\n      },\r\n      setShouldShowTopics(state, payload) {\r\n        state.shouldShowTopics = payload;\r\n      },\r\n      setShouldShowMap(state, payload) {\r\n        state.shouldShowMap = payload;\r\n      },\r\n      setWindowWidth(state, payload) {\r\n        state.windowWidth = payload;\r\n      },\r\n\r\n      setRoute(state, payload) {\r\n        state.route = payload;\r\n      },\r\n      setDidToggleModal(state, {name, open}) {\r\n        console.log('setDidToggleModal, name:', name, 'open:', open);\r\n        state.modals[name].open = open === null ? !state.modals[name].open : open\r\n      },\r\n      // [types.TOGGLE_MODAL] (state, {name, open}) {\r\n      //   state.modals[name].open = open === null ? !state.modals[name].open : open\r\n      // },\r\n      // [types.CLOSE_MODALS] (state) {\r\n      //   for (let modalName in state.modals) {\r\n      //     state.modals[modalName].open = false\r\n      //   }\r\n      // }\r\n      setShouldShowAddressCandidateList(state, payload) {\r\n        state.shouldShowAddressCandidateList = payload;\r\n      },\r\n      setCandidates(state, payload) {\r\n        state.candidates = payload;\r\n      },\r\n      setAddressEntered(state, payload) {\r\n        state.addressEntered = payload;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default createStore;\r\n","// shout out to airyland\r\n// https://github.com/airyland/vue-config/blob/master/index.js\r\n\r\nexport default (Vue, config) => {\r\n  Vue.mixin({\r\n    created() {\r\n      this.$config = config;\r\n    }\r\n  });\r\n};\r\n","<template>\r\n  <div id=\"topic-panel-container\"\r\n       :class=\"this.topicPanelContainerClass\"\r\n  >\r\n  <!-- class=\"cell medium-8 small-order-2 medium-order-1\" -->\r\n      <div class=\"cell\">\r\n        <div class=\"forms-header\">\r\n\r\n          <!-- layer filter -->\r\n          <form @submit.prevent=\"handleLayerFilterFormX\"\r\n                @keydown=\"preventEnter\"\r\n                class=\"om-search-control-input\"\r\n          >\r\n            <div class=\"input-group text-filter\">\r\n              <span class=\"input-group-label input-font\">Filter By Text:</span>\r\n              <input\r\n                     type=\"text\"\r\n                     class=\"input-type\"\r\n                     @keyup=\"handleLayerFilterFormKeyup\"\r\n              />\r\n              <!-- placeholder=\"Filter datasets\" -->\r\n              <div class=\"input-group-button\"\r\n                   v-if=\"this.$store.state.layers.inputLayerFilter != ''\"\r\n              >\r\n\r\n                <button class=\"om-search-control-button\">\r\n                  <i class=\"fa fa-times fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <!-- tags filter -->\r\n          <form @submit.prevent=\"handleTagsFilterFormX\"\r\n                @keydown=\"preventEnter\"\r\n                class=\"om-search-control-input-tags\"\r\n          >\r\n            <div class=\"input-group text-filter\">\r\n              <span class=\"input-group-label input-font\">Filter By Tags:</span>\r\n              <input\r\n                     type=\"text\"\r\n                     class=\"input-type\"\r\n                     @keyup=\"handleTagsFilterFormKeyup\"\r\n              />\r\n              <!-- placeholder=\"Filter datasets\" -->\r\n              <div class=\"input-group-button\"\r\n                   v-if=\"this.$store.state.layers.inputTagsFilter != ''\"\r\n              >\r\n\r\n                <button class=\"om-search-control-button\">\r\n                  <i class=\"fa fa-times fa-lg\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <!-- categories filter -->\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-label input-font\">Filter By Category:</span>\r\n\r\n            <select @change=\"didSelectCategory\"\r\n                    class=\"input-select\"\r\n            >\r\n              <option v-for=\"category in this.categories\"\r\n                      value=\"category\"\r\n              >\r\n                {{ category }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      <!-- </div> -->\r\n\r\n        <div class=\"topics-container cell medium-cell-block-y\"\r\n             id=\"topics-container\"\r\n        >\r\n          <form action=\"#/\">\r\n            <fieldset class=\"options\">\r\n              <!-- <ul class=\"no-bullet\"> -->\r\n                <checkbox v-for=\"(currentWmLayer, index) in this.currentWmLayers\"\r\n                          :layer=\"currentWmLayer.layer\"\r\n                          :layerName=\"currentWmLayer.title\"\r\n                          :layerId=\"currentWmLayer.id\"\r\n                          :layerDefinition=\"currentWmLayer.rest.layerDefinition\"\r\n                          :opacity=\"currentWmLayer.opacity\"\r\n                          :legend=\"currentWmLayer.legend\"\r\n                          :key=\"currentWmLayer.id\"\r\n                          :tags=\"currentWmLayer.tags\"\r\n                >\r\n                </checkbox>\r\n              <!-- </ul> -->\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as philaVueComps from '@cityofphiladelphia/phila-vue-comps';\r\n  const Checkbox = philaVueComps.Checkbox\r\n\r\n  export default {\r\n    components: {\r\n      Checkbox\r\n    },\r\n    computed: {\r\n      windowWidth() {\r\n        return this.$store.state.windowWidth;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      topicPanelContainerClass() {\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'cell medium-1 small-order-2 medium-order-1'\r\n        } else if (this.windowWidth >= 950) {\r\n          return 'cell medium-8 small-order-1 small-24 medium-order-2';\r\n        } else {\r\n          return 'cell medium-10 small-order-1 small-24 medium-order-2';\r\n        }\r\n      },\r\n      categories() {\r\n        return this.$store.state.map.categories;\r\n      },\r\n      selectedCategory() {\r\n        return this.$store.state.map.selectedCategory;\r\n      },\r\n      scale() {\r\n        return this.$store.state.map.scale;\r\n      },\r\n      currentWmLayers() {\r\n        const layers = this.$store.state.map.webMapLayersAndRest;\r\n        let currentLayers = [];\r\n        for (let layer of layers) {\r\n          if (layer.tags) {\r\n            if (\r\n              layer.title.toLowerCase().includes(this.inputLayerFilter.toLowerCase()) && layer.tags.join().toLowerCase().includes(this.inputTagsFilter.toLowerCase()) && layer.category.includes(this.selectedCategory)\r\n              || this.$store.state.map.webMapActiveLayers.includes(layer.title)\r\n            ) {\r\n              // if (this.inputTagsFilter !== '') {\r\n              //   for (let layerTag of layer.tags) {\r\n              //     if (layerTag.toLowerCase().includes(this.inputTagsFilter.toLowerCase())) {\r\n              //       console.log('layerTag:', layerTag);\r\n              //     }\r\n              //   }\r\n              // }\r\n              currentLayers.push(layer)\r\n            }\r\n          } else if (this.inputTagsFilter !== '') {\r\n            continue;\r\n          } else {\r\n            if (\r\n              layer.title.toLowerCase().includes(this.inputLayerFilter.toLowerCase()) && layer.category.includes(this.selectedCategory)\r\n              || this.$store.state.map.webMapActiveLayers.includes(layer.title)\r\n            ) {\r\n              currentLayers.push(layer)\r\n            }\r\n          }\r\n        }\r\n        return currentLayers;\r\n      },\r\n      inputLayerFilter() {\r\n        return this.$store.state.layers.inputLayerFilter;\r\n      },\r\n      inputTagsFilter() {\r\n        return this.$store.state.layers.inputTagsFilter;\r\n      },\r\n      windowSize() {\r\n        return this.$store.state.windowSize;\r\n      },\r\n    },\r\n    methods: {\r\n      handleLayerFilterFormKeyup(e) {\r\n        const input = e.target.value;\r\n        this.$store.commit('setInputLayerFilter', input);\r\n      },\r\n      handleLayerFilterFormX(e) {\r\n        e.target[0].value = ''\r\n        this.$store.commit('setInputLayerFilter', '');\r\n      },\r\n      handleTagsFilterFormKeyup(e) {\r\n        const input = e.target.value;\r\n        // if (input.length >= 3) {\r\n        this.$store.commit('setInputTagsFilter', input);\r\n        // } else {\r\n          // this.$store.commit('setInputLayerFilter', null);\r\n        // }\r\n      },\r\n      handleTagsFilterFormX(e) {\r\n        e.target[0].value = ''\r\n        this.$store.commit('setInputTagsFilter', '');\r\n      },\r\n      didSelectCategory(e) {\r\n        const selected = e.target.selectedIndex;\r\n        this.$store.commit('setSelectedCategory', this.categories[selected]);\r\n      },\r\n      preventEnter(e) {\r\n        if(e.keyCode === 13) {\r\n          e.preventDefault();\r\n        }\r\n      },\r\n    },\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .forms-header {\r\n    padding: 5px;\r\n    /*this keeps the box shadow over the scrollable part of the panel*/\r\n    position: relative;\r\n    z-index: 1;\r\n    -webkit-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    -moz-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n  }\r\n\r\n  .input-type {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .input-select {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .input-group {\r\n    height: 40px !important;\r\n    margin-top: 6px;\r\n    margin-bottom: 6px;\r\n  }\r\n\r\n  .input-group-label {\r\n    border-right: 1px;\r\n    border-style: solid;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    padding-top: 0px;\r\n    padding-bottom: 0px;\r\n    height: 20px !important;\r\n  }\r\n\r\n  .topics-container {\r\n    padding: 20px;\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  .topics-container {\r\n    /* height: calc(100vh - 220px); */\r\n    height: calc(100vh - 268px);\r\n  }\r\n\r\n  /* @media screen and (max-width: 40em) { */\r\n  @media screen and (max-width: 750px) {\r\n    .topics-container {\r\n      /* height: calc(100vh - 256px); */\r\n      height: calc(100vh - 300px);\r\n    }\r\n  }\r\n\r\n  .om-search-control-container {\r\n    border-radius: 2px;\r\n    box-shadow:0 2px 4px rgba(0,0,0,0.2),0 -1px 0px rgba(0,0,0,0.02);\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    width: inherit;\r\n  }\r\n\r\n  .om-search-control-button {\r\n    width: 40px;\r\n    background: #ccc;\r\n    float: right;\r\n  }\r\n\r\n  .om-search-control-input {\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .om-search-control-input-tags {\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .input-font {\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n</style>\r\n","export default {\r\n  computed: {\r\n    // returns map markers as simple object with a geometry property, key,\r\n    // and optional properties for symbology\r\n    markers() {\r\n      const markers = [];\r\n      // geocoded address marker\r\n      const geocodeGeom = this.geocodeGeom;\r\n      if (geocodeGeom) {\r\n        const latlng = [...geocodeGeom.coordinates].reverse();\r\n        const key = this.geocodeResult.properties.street_address;\r\n        const addressMarker = {latlng, key};\r\n        markers.push(addressMarker);\r\n      }\r\n      return markers;\r\n    },\r\n    locationMarker() {\r\n      const latlngArray = [this.$store.state.map.location.lat, this.$store.state.map.location.lng]\r\n      const marker = {\r\n        latlng: latlngArray,\r\n        radius: 6,\r\n        fillColor: '#ff3f3f',\r\n        color: '#ff0000',\r\n        weight: 1,\r\n        opacity: 1,\r\n        fillOpacity: 1.0\r\n      }\r\n      return marker;\r\n    },\r\n  },\r\n};\r\n","<template>\r\n  <div id=\"map-panel-container\"\r\n       :class=\"this.mapPanelContainerClass\"\r\n  >\r\n    <full-screen-map-toggle-tab v-once />\r\n    <map_ :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\"\r\n          id=\"map-tag\"\r\n          :center=\"this.mapCenter\"\r\n          :zoom=\"this.$store.state.map.zoom\"\r\n          @l-click=\"handleMapClick\"\r\n          @l-moveend=\"handleMapMove\"\r\n          zoom-control-position=\"bottomright\"\r\n          :min-zoom=\"this.$config.map.minZoom\"\r\n          :max-zoom=\"22\"\r\n    >\r\n\r\n    <!-- <polygon_ -->\r\n    <polygon_ v-if=\"this.selectedPopupLayerGeometryType === 'Polygon' || this.selectedPopupLayerGeometryType === 'MultiPolygon'\"\r\n              :color=\"'#00ffff'\"\r\n              :fill=\"false\"\r\n              :weight=\"5\"\r\n              :latlngs=\"this.selectedPopupLayerCoordinatesFlipped\"\r\n              :pane=\"'highlightOverlay'\"\r\n    />\r\n    <polyline_ v-if=\"this.selectedPopupLayerGeometryType === 'LineString'\"\r\n              :color=\"'#00ffff'\"\r\n              :weight=\"4\"\r\n              :latlngs=\"this.selectedPopupLayerCoordinatesFlipped\"\r\n              :pane=\"'highlightOverlay'\"\r\n    />\r\n    <circle-marker v-if=\"this.selectedPopupLayerGeometryType === 'Point'\"\r\n                   :latlng=\"this.selectedPopupLayerCoordinatesFlipped\"\r\n                   :radius=\"7\"\r\n                   :fillColor=\"'#00ffff'\"\r\n                   :color=\"'#00ffff'\"\r\n                   :weight=\"this.locationMarker.weight\"\r\n                   :opacity=\"this.locationMarker.opacity\"\r\n                   :fillOpacity=\"this.locationMarker.fillOpacity\"\r\n                   :pane=\"'highlightOverlay'\"\r\n    />\r\n\r\n      <!-- webmap -->\r\n      <esri-web-map>\r\n        <esri-web-map-layer v-for=\"(layer, key) in this.$store.state.map.webMapLayersAndRest\"\r\n                            v-if=\"shouldShowFeatureLayer(layer)\"\r\n                            :key=\"key\"\r\n                            :layer=\"layer.layer\"\r\n                            :layerName=\"layer.title\"\r\n                            :layerDefinition=\"layer.rest.layerDefinition\"\r\n                            :opacity=\"layer.opacity\"\r\n                            :type=\"layer.type2\"\r\n        />\r\n      </esri-web-map>\r\n      <pop-up v-if=\"this.shouldShowPopup\">\r\n        <pop-up-content />\r\n      </pop-up>\r\n\r\n\r\n      <!-- basemaps -->\r\n      <esri-tiled-map-layer v-for=\"(basemap, key) in this.$config.map.basemaps\"\r\n                         v-if=\"activeBasemap === key\"\r\n                         :key=\"key\"\r\n                         :name=\"key\"\r\n                         :url=\"basemap.url\"\r\n                         :max-zoom=\"basemap.maxZoom\"\r\n                         :zIndex=\"basemap.zIndex\"\r\n                         :attribution=\"basemap.attribution\"\r\n      />\r\n\r\n      <!-- basemap labels and parcels outlines -->\r\n      <esri-tiled-map-layer v-for=\"(tiledLayer, key) in this.$config.map.tiledLayers\"\r\n                         v-if=\"activeTiles.includes(key)\"\r\n                         :key=\"key\"\r\n                         :name=\"key\"\r\n                         :url=\"tiledLayer.url\"\r\n                         :zIndex=\"tiledLayer.zIndex\"\r\n                         :attribution=\"tiledLayer.attribution\"\r\n      />\r\n\r\n      <vector-marker v-for=\"(marker, index) in markers\"\r\n                    :latlng=\"marker.latlng\"\r\n                    :key=\"marker.key\"\r\n      />\r\n\r\n      <!-- marker using a png and ablility to rotate it -->\r\n      <png-marker v-if=\"this.cyclomediaActive\"\r\n                  :icon=\"'../../src/assets/camera.png'\"\r\n                  :latlng=\"cycloLatlng\"\r\n                  :rotationAngle=\"cycloRotationAngle\"\r\n      />\r\n\r\n      <!-- marker using custom code extending icons - https://github.com/iatkin/leaflet-svgicon -->\r\n      <svg-view-cone-marker v-if=\"this.cyclomediaActive\"\r\n                            :latlng=\"cycloLatlng\"\r\n                            :rotationAngle=\"cycloRotationAngle\"\r\n                            :hFov=\"cycloHFov\"\r\n      />\r\n\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostright'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostleft'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <div v-once>\r\n        <basemap-toggle-control v-if=\"shouldShowImageryToggle\"\r\n                                v-once\r\n                                :position=\"'topright'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <basemap-select-control\r\n                       :position=\"'topalmostright'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <pictometry-button v-if=\"this.shouldShowPictometryButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'pictometry'\"\r\n                           :imgSrc=\"'../../src/assets/pictometry.png'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <cyclomedia-button v-if=\"this.shouldShowCyclomediaButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'cyclomedia'\"\r\n                           :imgSrc=\"'../../src/assets/cyclomedia.png'\"\r\n                           @click=\"handleCyclomediaButtonClick\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <measure-control :position=\"'bottomleft'\" />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <location-control v-once\r\n                          v-if=\"this.geolocationEnabled\"\r\n                          :position=\"'bottomright'\"\r\n                          @click=\"handleButtonClick\"\r\n        />\r\n      </div>\r\n\r\n      <!-- search control -->\r\n      <div v-once>\r\n        <AddressInput :position=\"this.addressInputPosition\" />\r\n      </div>\r\n      <AddressCandidateList v-if=\"this.addressAutocompleteEnabled\"\r\n                            :position=\"this.addressInputPosition\"\r\n      />\r\n\r\n      <!-- location marker -->\r\n      <circle-marker v-if=\"this.$store.state.map.location.lat != null\"\r\n                     :latlng=\"this.locationMarker.latlng\"\r\n                     :radius=\"this.locationMarker.radius\"\r\n                     :fillColor=\"this.locationMarker.fillColor\"\r\n                     :color=\"this.locationMarker.color\"\r\n                     :weight=\"this.locationMarker.weight\"\r\n                     :opacity=\"this.locationMarker.opacity\"\r\n                     :fillOpacity=\"this.locationMarker.fillOpacity\"\r\n                     :pane=\"'highlightOverlay'\"\r\n      />\r\n\r\n      <cyclomedia-recording-circle v-for=\"recording in cyclomediaRecordings\"\r\n                                   v-if=\"cyclomediaActive\"\r\n                                   :key=\"recording.imageId\"\r\n                                   :imageId=\"recording.imageId\"\r\n                                   :latlng=\"[recording.lat, recording.lng]\"\r\n                                   :size=\"1.2\"\r\n                                   :color=\"'#3388ff'\"\r\n                                   :weight=\"1\"\r\n                                   @l-click=\"handleCyclomediaRecordingClick\"\r\n      />\r\n    </map_>\r\n    <modal-about></modal-about>\r\n    <slot class='widget-slot' name=\"cycloWidget\" />\r\n    <slot class='widget-slot' name=\"pictWidget\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n  import * as philaVueMapping from '@cityofphiladelphia/phila-vue-mapping';\r\n\r\n  // mixins\r\n  import markersMixin from './markers-mixin';\r\n  const cyclomediaMixin = philaVueMapping.CyclomediaMixin;\r\n  const pictometryMixin = philaVueMapping.PictometryMixin;\r\n\r\n  // vue doesn't like it when you import this as Map (reserved-ish word)\r\n  const Map_ = philaVueMapping.Map_;\r\n  const AddressInput = philaVueMapping.AddressInput;\r\n  const AddressCandidateList = philaVueMapping.AddressCandidateList;\r\n  const CircleMarker = philaVueMapping.CircleMarker;\r\n  const Control = philaVueMapping.Control;\r\n  const EsriTiledMapLayer = philaVueMapping.EsriTiledMapLayer;\r\n  const PngMarker = philaVueMapping.PngMarker;\r\n  const BasemapToggleControl = philaVueMapping.BasemapToggleControl;\r\n  const BasemapSelectControl = philaVueMapping.BasemapSelectControl;\r\n  const FullScreenMapToggleTab = philaVueMapping.FullScreenMapToggleTab;\r\n  const LocationControl = philaVueMapping.LocationControl;\r\n  const CyclomediaButton = philaVueMapping.CyclomediaButton;\r\n  const PictometryButton = philaVueMapping.PictometryButton;\r\n  const CyclomediaRecordingCircle = philaVueMapping.CyclomediaRecordingCircle;\r\n  const CyclomediaRecordingsClient = philaVueMapping.CyclomediaRecordingsClient;\r\n  const SvgViewConeMarker = philaVueMapping.SvgViewConeMarker;\r\n  const MeasureControl = philaVueMapping.MeasureControl;\r\n  const ControlCorner = philaVueMapping.ControlCorner;\r\n  const PopUp = philaVueMapping.PopUp;\r\n  const PopUpContent = philaVueMapping.PopUpContent;\r\n  const Polygon_ = philaVueMapping.Polygon_;\r\n  const Polyline_ = philaVueMapping.Polyline_;\r\n  const ModalAbout = philaVueMapping.ModalAbout;\r\n\r\n  const EsriWebMap = philaVueMapping.WebMap;\r\n  const EsriWebMapLayer = philaVueMapping.WebMapLayer;\r\n  const VectorMarker = philaVueMapping.VectorMarker;\r\n\r\n  export default {\r\n    mixins: [\r\n      markersMixin,\r\n      cyclomediaMixin,\r\n      pictometryMixin,\r\n    ],\r\n    components: {\r\n      AddressInput,\r\n      AddressCandidateList,\r\n      Map_,\r\n      Control,\r\n      EsriWebMap,\r\n      EsriWebMapLayer,\r\n      EsriTiledMapLayer,\r\n      CircleMarker,\r\n      VectorMarker,\r\n      PngMarker,\r\n      BasemapToggleControl,\r\n      BasemapSelectControl,\r\n      FullScreenMapToggleTab,\r\n      LocationControl,\r\n      PictometryButton,\r\n      CyclomediaButton,\r\n      CyclomediaRecordingCircle,\r\n      SvgViewConeMarker,\r\n      MeasureControl,\r\n      ControlCorner,\r\n      PopUp,\r\n      PopUpContent,\r\n      Polygon_,\r\n      Polyline_,\r\n      ModalAbout\r\n    },\r\n    mounted() {\r\n      this.$controller.appDidLoad();\r\n    },\r\n    computed: {\r\n      mapCenter() {\r\n        return this.$store.state.map.center;\r\n      },\r\n      addressAutocompleteEnabled() {\r\n        // TODO tidy up the code\r\n        if (this.$config.addressAutocomplete.enabled === true) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      addressInputPosition() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'topleft'\r\n        } else {\r\n          return 'topalmostleft'\r\n        }\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      windowWidth() {\r\n        return this.$store.state.windowWidth;\r\n      },\r\n      mapPanelContainerClass() {\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'medium-24 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        } else if (this.windowWidth >= 950) {\r\n          return 'medium-16 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map';\r\n        } else {\r\n          return 'medium-14 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map';\r\n        }\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      shouldShowCyclomediaButton() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldShowPictometryButton() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldShowPopup() {\r\n        if (this.intersectingFeatures.length > 0) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      selectedPopupLayer() {\r\n        return this.$store.state.map.selectedPopupLayer;\r\n      },\r\n      selectedPopupLayerGeometryType() {\r\n        if (this.selectedPopupLayer) {\r\n          return this.selectedPopupLayer.feature.geometry.type;\r\n        } else {\r\n          return null;\r\n      }\r\n      },\r\n      selectedPopupLayerCoordinates() {\r\n        if (this.selectedPopupLayerGeometryType === \"Point\" || this.selectedPopupLayerGeometryType === \"LineString\") {\r\n          return this.selectedPopupLayer.feature.geometry.coordinates;\r\n        } else if (this.selectedPopupLayerGeometryType === \"Polygon\") {\r\n          return this.selectedPopupLayer.feature.geometry.coordinates[0];\r\n        } else if (this.selectedPopupLayerGeometryType === \"MultiPolygon\") {\r\n          return this.selectedPopupLayer.feature.geometry.coordinates;\r\n        }\r\n      },\r\n      selectedPopupLayerCoordinatesFlipped() {\r\n        // console.log('coords:', this.flipCoordsArray(this.selectedPopupLayerCoordinates));\r\n        if (this.selectedPopupLayerGeometryType === \"Point\") {\r\n          return this.flipCoords(this.selectedPopupLayerCoordinates);\r\n        } else if (this.selectedPopupLayerGeometryType !== \"MultiPolygon\") {\r\n          // console.log('calling FlipCoordsArray on:', this.selectedPopupLayerCoordinates);\r\n          return this.flipCoordsArray(this.selectedPopupLayerCoordinates);\r\n        } else {\r\n          return this.flipCoordsMultiPolygon(this.selectedPopupLayerCoordinates);\r\n        }\r\n      },\r\n      intersectingFeatures() {\r\n        return this.$store.state.map.intersectingFeatures;\r\n      },\r\n      geolocationEnabled() {\r\n        return this.$config.geolocation.enabled;\r\n      },\r\n      scale() {\r\n        return this.$store.state.map.scale;\r\n      },\r\n      webMapActiveLayers() {\r\n        return this.$store.state.map.webMapActiveLayers;\r\n      },\r\n      activeBasemap() {\r\n        const shouldShowImagery = this.$store.state.map.shouldShowImagery;\r\n        if (shouldShowImagery) {\r\n          return this.$store.state.map.imagery;\r\n        }\r\n        const defaultBasemap = this.$config.map.defaultBasemap;\r\n        const basemap = this.$store.state.map.basemap || defaultBasemap;\r\n        return basemap;\r\n      },\r\n      activeTiles() {\r\n        if (this.$config.map.basemaps[this.activeBasemap]) {\r\n          return this.$config.map.basemaps[this.activeBasemap].tiledLayers;\r\n        } else {\r\n          return [];\r\n        }\r\n      },\r\n      basemaps() {\r\n        return Object.values(this.$config.map.basemaps);\r\n      },\r\n      shouldShowImageryToggle() {\r\n        return this.hasImageryBasemaps && this.$config.map.imagery.enabled;\r\n      },\r\n      imageryBasemaps() {\r\n        return this.basemaps.filter(basemap => basemap.type === 'imagery');\r\n      },\r\n      hasImageryBasemaps() {\r\n        return this.imageryBasemaps.length > 0;\r\n      },\r\n      imageryYears() {\r\n        // pluck year from basemap objects\r\n        return this.imageryBasemaps.map(x => x.year);\r\n      },\r\n      historicBasemaps() {\r\n        return this.basemaps.filter(basemap => basemap.type === 'historic');\r\n      },\r\n      hasHistoricBasemaps() {\r\n        return this.historicBasemaps.length > 0;\r\n      },\r\n      historicYears() {\r\n        return this.historicBasemaps.map(x => x.year);\r\n      },\r\n      geocodeResult() {\r\n        return this.$store.state.geocode.data;\r\n      },\r\n      geocodeGeom() {\r\n        return (this.geocodeResult || {}).geometry;;\r\n      },\r\n      picOrCycloActive() {\r\n        if (this.cyclomediaActive || this.pictometryActive) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n    },\r\n    created() {\r\n      // if there's a default address, navigate to it\r\n      const defaultAddress = this.$config.defaultAddress;\r\n      if (defaultAddress) {\r\n        this.$controller.goToDefaultAddress(defaultAddress);\r\n      }\r\n\r\n      const cyclomediaConfig = this.$config.cyclomedia || {};\r\n      if (cyclomediaConfig.enabled) {\r\n      // create cyclomedia recordings client\r\n        this.$cyclomediaRecordingsClient = new CyclomediaRecordingsClient(\r\n          this.$config.cyclomedia.recordingsUrl,\r\n          this.$config.cyclomedia.username,\r\n          this.$config.cyclomedia.password,\r\n          4326\r\n        );\r\n      }\r\n    },\r\n    watch: {\r\n      picOrCycloActive(value) {\r\n        this.$nextTick(() => {\r\n          this.$store.state.map.map.invalidateSize();\r\n        })\r\n      }\r\n    },\r\n    methods: {\r\n      flipCoords(coords) {\r\n        // console.log('flipCoords is running on:', coords);\r\n        return [coords[1], coords[0]];\r\n      },\r\n      flipCoordsArray(anArray) {\r\n        // console.log('flipCoordsArray is running on:', anArray);\r\n        let newArray = []\r\n        for (let i in anArray) {\r\n          newArray[i] = [anArray[i][1], anArray[i][0]]\r\n        }\r\n        return newArray\r\n      },\r\n      flipCoordsMultiPolygon(aMultiPolygon) {\r\n        // console.log('flipCoordsMultiPolygon is running on:', aMultiPolygon);\r\n        let newArrayArray = []\r\n        for (let i in aMultiPolygon) {\r\n          // console.log('aMultiPolygon[i]', aMultiPolygon[i]);\r\n          let newArray = []\r\n          for (let j in aMultiPolygon[i][0]) {\r\n            // console.log('aMultiPolygon[i][0][j]', aMultiPolygon[i][0][j]);\r\n            newArray[j] = [aMultiPolygon[i][0][j][1], aMultiPolygon[i][0][j][0]]\r\n          }\r\n        newArrayArray[i] = newArray\r\n        }\r\n        return newArrayArray\r\n      },\r\n      shouldShowFeatureLayer(layer) {\r\n        if (layer.rest.layerDefinition) {\r\n          if (layer.rest.layerDefinition.minScale) {\r\n            // console.log('minZoom for', layer.title, 'is', layer.rest.layerDefinition.minScale, typeof layer.rest.layerDefinition.minScale, 'and current scale is', this.scale, typeof this.scale);\r\n            if (this.scale <= layer.rest.layerDefinition.minScale && this.webMapActiveLayers.includes(layer.title)) {\r\n              // console.log('checkLayer used layerDefinition and is returning true for', layer.title);\r\n              return true;\r\n            }\r\n          } else if (layer.rest.layerDefinition.drawingInfo && this.webMapActiveLayers.includes(layer.title)) {\r\n            return true;\r\n          }\r\n        } else if (this.webMapActiveLayers.includes(layer.title)) {\r\n          // console.log('checkLayer is returning true for', layer.title);\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      handleMapClick() {\r\n        // console.log('handle map click, e:', e);\r\n        document.getElementById('pvm-search-control-input').blur()\r\n      },\r\n      handleButtonClick() {\r\n        // console.log('handle button click is running');\r\n        document.getElementById('pvm-search-control-input').blur()\r\n      },\r\n      handleMapMove(e) {\r\n        // console.log('handleMapMove is running');\r\n        const map = this.$store.state.map.map;\r\n\r\n        const pictometryConfig = this.$config.pictometry || {};\r\n\r\n        const center = map.getCenter();\r\n        const { lat, lng } = center;\r\n        const coords = [lng, lat];\r\n        const zoom = map.getZoom();\r\n        this.$store.commit('setMapZoom', zoom);\r\n        const scale = this.$config.map.scales[zoom];\r\n        this.$store.commit('setMapScale', scale);\r\n\r\n        if (pictometryConfig.enabled) {\r\n          // update state for pictometry\r\n          this.$store.commit('setPictometryMapCenter', coords);\r\n\r\n          const zoom = map.getZoom();\r\n          this.$store.commit('setPictometryMapZoom', zoom);\r\n        }\r\n\r\n        const cyclomediaConfig = this.$config.cyclomedia || {};\r\n\r\n        if (cyclomediaConfig.enabled) {\r\n          // update cyclo recordings\r\n          this.updateCyclomediaRecordings();\r\n          this.$store.commit('setCyclomediaLatLngFromMap', [lat, lng]);\r\n        }\r\n      },\r\n\r\n    }, // end of methods\r\n  }; //end of export\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  /* .map-panel-container {\r\n    height: calc(100vh - 220px);\r\n  }\r\n\r\n  @media screen and (max-width: 40em) {\r\n    .map-panel-container {\r\n      height: calc(100vh - 256px);\r\n    }\r\n  } */\r\n\r\n/*this allows the loading mask to fill the div*/\r\n  .mb-panel-map {\r\n    position: relative;\r\n  }\r\n\r\n  .mb-map-with-widget {\r\n    height: 50%;\r\n  }\r\n\r\n  /* @media (max-width: 1024px) {\r\n    .mb-panel-map {\r\n      height: 600px;\r\n    }\r\n  } */\r\n\r\n  .mb-search-control-container {\r\n    height: 48px;\r\n    border-radius: 2px;\r\n    box-shadow:0 2px 4px rgba(0,0,0,0.2),0 -1px 0px rgba(0,0,0,0.02);\r\n  }\r\n\r\n  .mb-search-control-button {\r\n    color: #fff;\r\n    width: 50px;\r\n    background: #2176d2;\r\n    line-height: 48px;\r\n  }\r\n\r\n  .mb-search-control-input {\r\n    /* background-color: white; */\r\n    border: 0;\r\n    /* height: 48px !important; */\r\n    /* line-height: 48px; */\r\n    padding: 15px;\r\n    /* padding-left: 15px; */\r\n    /* padding-right: 15px; */\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    font-size: 16px;\r\n    width: 275px;\r\n  }\r\n\r\n  /* .mb-map-with-widget {\r\n    height: 50%;\r\n  } */\r\n\r\n  .widget-slot {\r\n    display: inline-block;\r\n    float: left;\r\n  }\r\n\r\n  .mb-map-loading-mask {\r\n    /*display: inline;*/\r\n    position: absolute;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(0, 0 ,0 , 0.25);\r\n    z-index: 1000;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .mb-map-loading-mask-inner {\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 40%;\r\n  }\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    .mb-search-control-input {\r\n      width: 250px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 900px) {\r\n    .mb-search-control-input {\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    .mb-search-control-input {\r\n      width: 150px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 750px) {\r\n    .mb-search-control-input {\r\n      width: 250px;\r\n    }\r\n  }\r\n\r\n  /* @media screen and (max-width: 639px) {\r\n    .mb-search-control-input {\r\n      width: 250px;\r\n    }\r\n  } */\r\n\r\n  @media screen and (max-width: 450px) {\r\n    .mb-search-control-input {\r\n      width: 200px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 400px) {\r\n    .mb-search-control-input {\r\n      width: 150px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 350px) {\r\n    .mb-search-control-input {\r\n      width: 100px;\r\n    }\r\n  }\r\n</style>\r\n","<template>\r\n  <div class=\"cell medium-auto grid-x\" id=\"mb-root\">\r\n    <button class=\"small-24 button datasets-button\"\r\n            @click=\"toggleTopics\"\r\n    >\r\n      {{ this.buttonMessage }}\r\n    </button>\r\n\r\n      <topic-panel v-show=\"shouldShowTopics\" />\r\n      <map-panel v-show=\"shouldShowMap\">\r\n        <cyclomedia-widget v-if=\"this.shouldLoadCyclomediaWidget\"\r\n                           slot=\"cycloWidget\"\r\n                           v-show=\"cyclomediaActive\"\r\n                           screen-percent=\"3\"\r\n        />\r\n        <pictometry-widget v-if=\"this.shouldLoadPictometryWidget\"\r\n                           slot=\"pictWidget\"\r\n                           v-show=\"pictometryActive\"\r\n                           :apiKey=\"this.ak\"\r\n                           :secretKey=\"this.sk\"\r\n        >\r\n          <png-marker v-if=\"this.pictometryShowAddressMarker\"\r\n                      :latlng=\"[this.geocodeData.geometry.coordinates[1], this.geocodeData.geometry.coordinates[0]]\"\r\n                      :icon=\"'markers.png'\"\r\n                      :height=\"60\"\r\n                      :width=\"40\"\r\n                      :offsetX=\"0\"\r\n                      :offsetY=\"0\"\r\n          />\r\n          <layer v-if=\"this.pictometryActive\" />\r\n          <png-marker v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                      :latlng=\"cycloLatlng\"\r\n                      :icon=\"'camera2.png'\"\r\n                      :height=\"20\"\r\n                      :width=\"30\"\r\n                      :offsetX=\"-2\"\r\n                      :offsetY=\"-2\"\r\n          />\r\n          <view-cone v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                     :latlng=\"cycloLatlng\"\r\n                     :rotationAngle=\"cycloRotationAngle\"\r\n                     :hFov=\"cycloHFov\"\r\n          />\r\n        </pictometry-widget>\r\n      </map-panel>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as philaVueMapping from '@cityofphiladelphia/phila-vue-mapping';\r\n  const CyclomediaWidget = philaVueMapping.CyclomediaWidget;\r\n  const PictometryWidget = philaVueMapping.PictometryWidget;\r\n  const Layer = philaVueMapping.PictometryLayer;\r\n  const ViewCone = philaVueMapping.PictometryViewCone;\r\n  const PngMarker = philaVueMapping.PictometryPngMarker;\r\n\r\n  import axios from 'axios';\r\n  import TopicPanel from './TopicPanel.vue';\r\n  import MapPanel from './MapPanel.vue';\r\n\r\n  export default {\r\n    components: {\r\n      TopicPanel,\r\n      MapPanel,\r\n      CyclomediaWidget,\r\n      PictometryWidget,\r\n      Layer,\r\n      ViewCone,\r\n      PngMarker\r\n    },\r\n    mounted() {\r\n      // console.log('cyclo', this.$config.cyclomedia.enabled, CyclomediaWidget);\r\n      window.addEventListener('resize', this.handleWindowResize);\r\n      this.handleWindowResize();\r\n\r\n      const store = this.$store;\r\n      const knackUrl = \"https://api.knackhq.com/v1/objects/object_4/records/export?type=json\";\r\n      const params = {\r\n        // dataType: 'json'\r\n      }\r\n      const headers = {\r\n        'X-Knack-Application-Id': '550c60d00711ffe12e9efc64',\r\n        'X-Knack-REST-API-Key': '7bce4520-28dc-11e5-9f0a-4d758115b820'\r\n      }\r\n      axios.get(knackUrl, { params, headers }).then(response => {\r\n        const dataOut = response.data;\r\n        const records = dataOut.records;\r\n        const recordsFiltered = records.filter(record => record.field_12 === \"API\" || record.field_12 === \"GeoService\");\r\n\r\n        let bennyEndpoints = {};\r\n\r\n        for (let record of recordsFiltered) {\r\n          const url = record.field_25.split('\"')[1];\r\n          let url2;\r\n          if (url) {\r\n            url2 = url.split('query')[0].replace('https://', '').replace('http://', '').replace(/\\/$/, \"\").toLowerCase();\r\n          } else {\r\n            url2 = null;\r\n          }\r\n          if (record.field_13_raw.length > 0) {\r\n              bennyEndpoints[url2] = record.field_13_raw[0].id;\r\n          } else {\r\n              bennyEndpoints[url2] = '';\r\n          }\r\n        }\r\n        store.commit('setBennyEndpoints', bennyEndpoints);\r\n      }, response => {\r\n        console.log('AXIOS ERROR WebMapViewer.vue');\r\n      });\r\n    },\r\n    computed: {\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      shouldLoadCyclomediaWidget() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldLoadPictometryWidget() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active\r\n      },\r\n      pictometryZoom() {\r\n        return this.$store.state.pictometry.zoom\r\n      },\r\n      pictometryShowAddressMarker() {\r\n        if (!this.pictometryActive || !this.geocodeData) {\r\n          return false;\r\n        } else if (this.pictometryZoom < 20 && this.cyclomediaActive) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      geocodeData() {\r\n        return this.$store.state.geocode.data\r\n      },\r\n      ak() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.apiKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.apiKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.apiKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.apiKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.apiKey;\r\n        }\r\n      },\r\n      sk() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.secretKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.secretKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.secretKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.secretKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.secretKey;\r\n        }\r\n      },\r\n      geocodeData() {\r\n        return this.$store.state.geocode.data\r\n      },\r\n      windowWidth() {\r\n        return this.$store.state.windowWidth;\r\n      },\r\n      windowHeight() {\r\n        return this.$store.state.windowSize.height;\r\n      },\r\n      didToggleTopicsOn() {\r\n        return this.$store.state.didToggleTopicsOn;\r\n      },\r\n      buttonMessage() {\r\n        if (this.didToggleTopicsOn) {\r\n          return 'See Map';\r\n        } else {\r\n          return 'See Datasets';\r\n        }\r\n      },\r\n      shouldShowTopics() {\r\n        return this.$store.state.shouldShowTopics;\r\n      },\r\n      shouldShowMap() {\r\n        return this.$store.state.shouldShowMap;\r\n      }\r\n    },\r\n    watch: {\r\n      pictometryShowAddressMarker(nextValue) {\r\n        // console.log('watch pictometryShowAddressMarker', nextValue);\r\n      },\r\n      windowWidth(nextWidth) {\r\n        this.calculateShouldShowTopics();\r\n        this.calculateShouldShowMap();\r\n      },\r\n      fullScreenMapEnabled(nextValue) {\r\n        this.calculateShouldShowTopics();\r\n        this.calculateShouldShowMap();\r\n      },\r\n      didToggleTopicsOn(nextValue) {\r\n        this.calculateShouldShowTopics();\r\n        this.calculateShouldShowMap();\r\n      },\r\n      shouldShowTopics(nextValue) {\r\n        this.handleWindowResize();\r\n      },\r\n      shouldShowMap(nextValue) {\r\n        this.handleWindowResize();\r\n      }\r\n    },\r\n    methods: {\r\n      // for mobile only\r\n      toggleTopics() {\r\n        const prevVal = this.$store.state.didToggleTopicsOn;\r\n        this.$store.commit('setDidToggleTopicsOn', !prevVal);\r\n      },\r\n      calculateShouldShowTopics() {\r\n        const windowWidth = this.windowWidth;\r\n        const smallScreen = windowWidth < 750;\r\n        const didToggleTopicsOn = this.$store.state.didToggleTopicsOn;\r\n        const fullScreenMapEnabled = this.$store.state.fullScreenMapEnabled;\r\n        // console.log('calculateShouldShowTopics, smallScreen:', smallScreen, 'didToggleTopicsOn', didToggleTopicsOn, 'fullScreenMapEnabled', fullScreenMapEnabled);\r\n        const shouldShowTopics = !smallScreen && !fullScreenMapEnabled || smallScreen && didToggleTopicsOn;\r\n        this.$store.commit('setShouldShowTopics', shouldShowTopics);\r\n      },\r\n      calculateShouldShowMap() {\r\n        const windowWidth = this.windowWidth;\r\n        const notMobile = windowWidth > 750;\r\n        const didToggleTopicsOn = this.$store.state.didToggleTopicsOn;\r\n        const shouldShowMap = notMobile || !didToggleTopicsOn;\r\n        this.$store.commit('setShouldShowMap', shouldShowMap);\r\n      },\r\n      handleWindowResize() {\r\n        const rootElement = document.getElementById('mb-root');\r\n        const rootStyle = window.getComputedStyle(rootElement);\r\n        // const rootHeight = rootStyle.getPropertyValue('height');\r\n        // const rootHeightNum = parseInt(rootHeight.replace('px', ''));\r\n        const rootHeightNum = 100;\r\n        const rootWidth = rootStyle.getPropertyValue('width');\r\n        const rootWidthNum = parseInt(rootWidth.replace('px', ''));\r\n        // let boardHeight;\r\n        const windowWidth = rootWidthNum;\r\n        const notMobile = windowWidth >= 640;\r\n        // console.log('handleWindowResize is running, windowWidth:', windowWidth, 'notMobile:', notMobile, 'this.$store.state.shouldShowTopics:', this.$store.state.shouldShowTopics);\r\n        // if (!notMobile) {\r\n        //   boardHeight = rootHeightNum - 34;\r\n        //   console.log('subtracting 34, rootHeightNum:', rootHeightNum, 'boardHeight:', boardHeight);\r\n        // } else {\r\n        //   boardHeight = rootHeightNum\r\n        //   // console.log('NOT subtracting 34, rootHeightNum:', rootHeightNum, 'boardHeight:', boardHeight);\r\n        // }\r\n        // this.styleObject.height = boardHeight.toString() + 'px';\r\n\r\n        // const obj = {\r\n        //   height: rootHeightNum,\r\n        //   width: rootWidthNum\r\n        // }\r\n        this.$store.commit('setWindowWidth', rootWidthNum);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  /*don't highlight any form elements*/\r\n  input:focus,\r\n  select:focus,\r\n  textarea:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* standards applies padding to buttons, which causes some weirdness with\r\n  buttons on the map panel. override here. */\r\n  button {\r\n    padding: inherit;\r\n  }\r\n\r\n  .mb-root {\r\n    position: absolute;\r\n    bottom: 0;\r\n    top: 78px;\r\n    left: 0;\r\n    right: 0;\r\n    overflow: auto;\r\n  }\r\n\r\n  .datasets-button {\r\n    display: none;\r\n    margin: 0;\r\n  }\r\n\r\n  .mb-panel {\r\n    height: 100%;\r\n  }\r\n\r\n  /*.mb-panel-topics-with-widget {\r\n    height: 50%;\r\n  }*/\r\n\r\n  /*small devices only*/\r\n  /* @media screen and (max-width: 39.9375em) { */\r\n  @media screen and (max-width: 750px) {\r\n    .datasets-button {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  /* Medium and up */\r\n  /* @media screen and (min-width: 40em) {\r\n\r\n  } */\r\n\r\n  /* Medium only */\r\n  /* @media screen and (min-width: 40em) and (max-width: 63.9375em) {\r\n\r\n  } */\r\n\r\n  /* Large and up */\r\n  /* @media screen and (min-width: 64em) {\r\n\r\n  } */\r\n\r\n  /* Large only */\r\n  /* @media screen and (min-width: 64em) and (max-width: 74.9375em) {\r\n\r\n  } */\r\n\r\n</style>\r\n","// http://stackoverflow.com/a/37164538/676001\r\n\r\n// helper to verify that an item is an object\r\nexport function isObject(item) {\r\n  return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n};\r\n\r\n// merges n objects, deeply, immutably\r\nexport default function mergeDeep(target, source) {\r\n  let output = Object.assign({}, target);\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach(key => {\r\n      if (isObject(source[key])) {\r\n        if (!(key in target))\r\n          Object.assign(output, { [key]: source[key] });\r\n        else\r\n          output[key] = mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(output, { [key]: source[key] });\r\n      }\r\n    });\r\n  }\r\n  return output;\r\n};\r\n","import axios from 'axios';\r\nimport Vue from 'vue';\r\nimport createStore from './store';\r\nimport configMixin from './util/config-mixin';\r\nimport WebMapViewer from './components/WebMapViewer.vue';\r\nimport mergeDeep from './util/merge-deep';\r\n\r\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch';\r\nconst controllerMixin = philaVueDatafetch;\r\n\r\nexport default (clientConfig) => {\r\n  const baseConfigUrl = clientConfig.baseConfig;\r\n\r\n  // get base config\r\n  return axios.get(baseConfigUrl).then(response => {\r\n    const data = response.data;\r\n    const baseConfigFn = eval(data);\r\n    const { gatekeeperKey } = clientConfig;\r\n    const baseConfig = baseConfigFn({ gatekeeperKey });\r\n\r\n    // deep merge base config and client config\r\n    const config = mergeDeep(baseConfig, clientConfig);\r\n\r\n    // make config accessible from each component via this.$config\r\n    Vue.use(configMixin, config);\r\n\r\n    // create store\r\n    const store = createStore(config);\r\n\r\n    // mix in controller\r\n    Vue.use(controllerMixin, { config, store });\r\n\r\n    // mount main vue\r\n    const vm = new Vue({\r\n      el: config.el || '#webmap-viewer',\r\n      render: (h) => h(WebMapViewer),\r\n      store\r\n    });\r\n\r\n  }, response => {\r\n    console.error('AXIOS ERROR loading base config');\r\n  });\r\n};\r\n"],"names":["const","userAgent","navigator","vendor","window","opera","test","substr","createStore","config","initialState","isMobileOrTablet","isMobileDevice","fullScreenMapEnabled","bennyEndpoints","geocode","status","data","input","related","layers","layerUrls","inputLayerFilter","inputTagsFilter","map","location","lat","lng","center","zoom","scale","basemap","imagery","shouldShowImagery","basemapLayers","webMap","webMapUrlLayer","webMapActiveLayers","webMapDisplayedLayers","webMapLayersAndRest","watchPositionOn","intersectingFeatures","popupCoords","selectedPopupLayer","categories","selectedCategory","shouldShowAddressCandidateList","candidates","addressEntered","cyclomedia","initialized","navBarOpen","latLngFromMap","orientation","yaw","hFov","xyz","active","recordings","pictometry","ipa","shapeIds","pngMarkerIds","lastSearchMethod","didToggleTopicsOn","shouldShowTopics","shouldShowMap","windowWidth","route","modals","help","open","Vuex","Store","state","getters","mutations","setCyclomediaInitialized","payload","setIsMobileOrTablet","setFullScreenMapEnabled","setCategories","setSelectedCategory","setSelectedPopupLayer","setIntersectingFeatures","setPopupCoords","setBennyEndpoints","setBennyEndpoints2","bennyEndpoints2","setBennyEndpoints3","bennyEndpoints3","setLocation","setWatchPositionOn","setLayerUrls","setInputLayerFilter","setInputTagsFilter","setMap","setWebMap","setWebMapUrlLayer","setWebMapActiveLayers","setWebMapDisplayedLayers","setWebMapLayersAndRest","setWebMapLayersOpacity","filter","layer","title","layerName","opacity","opa","setLegend","legend","setMapScale","setBasemap","setImagery","setShouldShowImagery","setMapCenter","setMapZoom","setGeocodeStatus","setGeocodeData","setGeocodeRelated","setGeocodeInput","setPictometryActive","enabled","setPictometryIpa","setPictometryShapeIds","setPictometryPngMarkerIds","setPictometryMapCenter","setPictometryMapZoom","setPictometryZoom","setCyclomediaActive","setCyclomediaYaw","setCyclomediaHFov","setCyclomediaXyz","setCyclomediaRecordings","setCyclomediaLatLngFromMap","setCyclomediaNavBarOpen","setDidToggleTopicsOn","setShouldShowTopics","setShouldShowMap","setWindowWidth","setRoute","setDidToggleModal","ref","console","log","name","setShouldShowAddressCandidateList","setCandidates","setAddressEntered","Vue","mixin","created","this","$config","use","Checkbox","philaVueComps.Checkbox","render","components","computed","$store","topicPanelContainerClass","currentWmLayers","currentLayers","let","tags","toLowerCase","includes","join","category","push","windowSize","methods","handleLayerFilterFormKeyup","e","target","value","commit","handleLayerFilterFormX","handleTagsFilterFormKeyup","handleTagsFilterFormX","didSelectCategory","selected","selectedIndex","preventEnter","keyCode","preventDefault","markers","geocodeGeom","addressMarker","coordinates","reverse","geocodeResult","properties","street_address","locationMarker","latlng","radius","fillColor","color","weight","fillOpacity","cyclomediaMixin","philaVueMapping.CyclomediaMixin","pictometryMixin","philaVueMapping.PictometryMixin","Map_","philaVueMapping.Map_","AddressInput","philaVueMapping.AddressInput","AddressCandidateList","philaVueMapping.AddressCandidateList","CircleMarker","philaVueMapping.CircleMarker","Control","philaVueMapping.Control","EsriTiledMapLayer","philaVueMapping.EsriTiledMapLayer","PngMarker","philaVueMapping.PngMarker","BasemapToggleControl","philaVueMapping.BasemapToggleControl","BasemapSelectControl","philaVueMapping.BasemapSelectControl","FullScreenMapToggleTab","philaVueMapping.FullScreenMapToggleTab","LocationControl","philaVueMapping.LocationControl","CyclomediaButton","philaVueMapping.CyclomediaButton","PictometryButton","philaVueMapping.PictometryButton","CyclomediaRecordingCircle","philaVueMapping.CyclomediaRecordingCircle","CyclomediaRecordingsClient","philaVueMapping.CyclomediaRecordingsClient","SvgViewConeMarker","philaVueMapping.SvgViewConeMarker","MeasureControl","philaVueMapping.MeasureControl","ControlCorner","philaVueMapping.ControlCorner","PopUp","philaVueMapping.PopUp","PopUpContent","philaVueMapping.PopUpContent","Polygon_","philaVueMapping.Polygon_","Polyline_","philaVueMapping.Polyline_","ModalAbout","philaVueMapping.ModalAbout","EsriWebMap","philaVueMapping.WebMap","EsriWebMapLayer","philaVueMapping.WebMapLayer","VectorMarker","philaVueMapping.VectorMarker","mixins","markersMixin","mounted","$controller","appDidLoad","mapCenter","addressAutocompleteEnabled","addressAutocomplete","addressInputPosition","mapPanelContainerClass","cycloLatlng","cycloRotationAngle","cycloHFov","shouldShowCyclomediaButton","shouldShowPictometryButton","shouldShowPopup","length","selectedPopupLayerGeometryType","feature","geometry","type","selectedPopupLayerCoordinates","selectedPopupLayerCoordinatesFlipped","flipCoords","flipCoordsArray","flipCoordsMultiPolygon","geolocationEnabled","geolocation","activeBasemap","defaultBasemap","activeTiles","basemaps","tiledLayers","Object","values","shouldShowImageryToggle","hasImageryBasemaps","imageryBasemaps","imageryYears","x","year","historicBasemaps","hasHistoricBasemaps","historicYears","picOrCycloActive","cyclomediaActive","pictometryActive","defaultAddress","goToDefaultAddress","$cyclomediaRecordingsClient","recordingsUrl","username","password","watch","$nextTick","invalidateSize","coords","anArray","newArray","i","aMultiPolygon","newArrayArray","j","shouldShowFeatureLayer","rest","layerDefinition","minScale","drawingInfo","handleMapClick","document","getElementById","blur","handleButtonClick","handleMapMove","pictometryConfig","getCenter","getZoom","scales","updateCyclomediaRecordings","CyclomediaWidget","philaVueMapping.CyclomediaWidget","PictometryWidget","philaVueMapping.PictometryWidget","Layer","philaVueMapping.PictometryLayer","ViewCone","philaVueMapping.PictometryViewCone","philaVueMapping.PictometryPngMarker","TopicPanel","MapPanel","addEventListener","handleWindowResize","store","axios","get","X-Knack-Application-Id","X-Knack-REST-API-Key","then","response","records","record","field_12","url","field_25","split","url2","replace","field_13_raw","id","shouldLoadCyclomediaWidget","shouldLoadPictometryWidget","pictometryZoom","pictometryShowAddressMarker","geocodeData","ak","host","hostname","apiKey","pictometryDev","pictometryCity","pictometryCityDev","pictometryLocal","sk","secretKey","windowHeight","height","buttonMessage","nextValue","nextWidth","calculateShouldShowTopics","calculateShouldShowMap","toggleTopics","prevVal","smallScreen","notMobile","rootElement","rootWidth","getComputedStyle","getPropertyValue","rootWidthNum","parseInt","isObject","item","Array","isArray","mergeDeep","source","output","assign","keys","forEach","key","controllerMixin","philaVueDatafetch","clientConfig","baseConfigUrl","baseConfig","baseConfigFn","eval","gatekeeperKey","configMixin","vm","el","h","WebMapViewer","error"],"mappings":"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"}